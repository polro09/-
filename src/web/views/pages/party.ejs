<%- contentFor('head') %>
<link rel="stylesheet" href="/css/party.css">

<%- contentFor('body') %>
<div class="content-wrapper">
    <!-- 페이지 헤더 -->
    <div class="page-header">
        <h1 class="page-title">파티 모집</h1>
        <p class="page-subtitle">함께 플레이할 파티를 찾아보세요</p>
    </div>

    <!-- 필터 바 -->
    <div class="filter-bar">
        <div class="filter-tabs">
            <button class="filter-tab active" data-status="recruiting">
                <i class="fas fa-bullhorn"></i> 모집 중
            </button>
            <button class="filter-tab" data-status="completed">
                <i class="fas fa-check"></i> 완료됨
            </button>
            <button class="filter-tab" data-status="all">
                <i class="fas fa-list"></i> 전체
            </button>
        </div>
        <div class="filter-actions">
            <a href="/party/create" class="btn btn-primary">
                <i class="fas fa-plus"></i>
                파티 생성
            </a>
            <button class="btn btn-secondary" onclick="refreshParties()">
                <i class="fas fa-sync-alt"></i>
                새로고침
            </button>
        </div>
    </div>

    <!-- 파티 상태 카드 -->
    <div class="party-stats-section">
        <div class="party-stats-grid" id="partyStats">
            <!-- 통계 카드들이 여기에 동적으로 생성됩니다 -->
        </div>
    </div>

    <!-- 로딩 상태 -->
    <div class="loading" id="loading">
        <div class="spinner"></div>
        <p>파티 목록을 불러오는 중...</p>
    </div>

    <!-- 파티 그리드 -->
    <div class="party-grid" id="partyGrid">
        <!-- 파티 카드들이 여기에 동적으로 생성됩니다 -->
    </div>

    <!-- 빈 상태 -->
    <div class="empty-state" id="emptyState" style="display: none;">
        <div class="empty-icon">
            <i class="fas fa-users-slash"></i>
        </div>
        <h2 class="empty-title">파티가 없습니다</h2>
        <p class="empty-desc">현재 모집 중인 파티가 없습니다.<br>새로운 파티를 생성해보세요!</p>
        <a href="/party/create" class="btn btn-primary">
            <i class="fas fa-plus"></i>
            파티 생성하기
        </a>
    </div>
</div>

<!-- 파티 상세 모달 -->
<div class="modal" id="partyDetailModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title">파티 상세 정보</h3>
            <button class="modal-close" onclick="closePartyModal()">&times;</button>
        </div>
        <div class="modal-body" id="partyDetailContent">
            <!-- 파티 상세 내용이 여기에 로드됩니다 -->
        </div>
    </div>
</div>

<script>
// 전역 변수
window.partyData = {
    currentFilter: 'recruiting',
    parties: [],
    stats: {}
};

// 페이지 초기화
document.addEventListener('DOMContentLoaded', function() {
    initializePartyPage();
});

// 파티 페이지 초기화
async function initializePartyPage() {
    try {
        await Promise.all([
            loadPartyStats(),
            loadParties()
        ]);
        
        // 필터 탭 이벤트 리스너 등록
        setupFilterTabs();
        
        // 주기적 업데이트 (30초마다)
        setInterval(loadParties, 30000);
        
    } catch (error) {
        console.error('파티 페이지 초기화 오류:', error);
        window.toast.error('페이지를 불러오는 중 오류가 발생했습니다.');
    }
}

// 파티 통계 로드
async function loadPartyStats() {
    try {
        const response = await fetch('/party/api/stats');
        if (!response.ok) throw new Error('통계를 불러올 수 없습니다.');
        
        const stats = await response.json();
        window.partyData.stats = stats;
        renderPartyStats(stats);
        
    } catch (error) {
        console.error('파티 통계 로드 오류:', error);
    }
}

// 파티 목록 로드
async function loadParties() {
    const loadingEl = document.getElementById('loading');
    const gridEl = document.getElementById('partyGrid');
    const emptyEl = document.getElementById('emptyState');
    
    try {
        loadingEl.style.display = 'block';
        
        const response = await fetch(`/party/api/list?status=${window.partyData.currentFilter}`);
        if (!response.ok) throw new Error('파티 목록을 불러올 수 없습니다.');
        
        const parties = await response.json();
        window.partyData.parties = parties;
        
        loadingEl.style.display = 'none';
        
        if (parties.length === 0) {
            gridEl.style.display = 'none';
            emptyEl.style.display = 'block';
        } else {
            emptyEl.style.display = 'none';
            gridEl.style.display = 'grid';
            renderParties(parties);
        }
        
    } catch (error) {
        console.error('파티 목록 로드 오류:', error);
        loadingEl.style.display = 'none';
        window.toast.error('파티 목록을 불러오는 중 오류가 발생했습니다.');
    }
}

// 파티 통계 렌더링
function renderPartyStats(stats) {
    const container = document.getElementById('partyStats');
    
    const statsHTML = `
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-bullhorn"></i>
            </div>
            <div class="stat-content">
                <div class="stat-value">${stats.recruiting || 0}</div>
                <div class="stat-label">모집 중</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-play"></i>
            </div>
            <div class="stat-content">
                <div class="stat-value">${stats.inProgress || 0}</div>
                <div class="stat-label">진행 중</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-check"></i>
            </div>
            <div class="stat-content">
                <div class="stat-value">${stats.completed || 0}</div>
                <div class="stat-label">완료</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-users"></i>
            </div>
            <div class="stat-content">
                <div class="stat-value">${stats.totalParticipants || 0}</div>
                <div class="stat-label">총 참여자</div>
            </div>
        </div>
    `;
    
    container.innerHTML = statsHTML;
}

// 파티 목록 렌더링
function renderParties(parties) {
    const container = document.getElementById('partyGrid');
    
    const partiesHTML = parties.map(party => createPartyCard(party)).join('');
    container.innerHTML = partiesHTML;
}

// 파티 카드 생성
function createPartyCard(party) {
    const typeEmojis = {
        '정규전': '⚔️',
        '모의전': '🛡️',
        '훈련': '🎯',
        'PVP': '🏆',
        '검은발톱': '🦅',
        '레이드': '🏜️'
    };
    
    const statusColors = {
        'recruiting': 'success',
        'in_progress': 'warning',
        'completed': 'secondary',
        'cancelled': 'danger'
    };
    
    const statusTexts = {
        'recruiting': '모집 중',
        'in_progress': '진행 중',
        'completed': '완료됨',
        'cancelled': '취소됨'
    };
    
    const scheduledDate = new Date(party.scheduledDate);
    const formattedDate = scheduledDate.toLocaleDateString('ko-KR', {
        month: 'short',
        day: 'numeric',
        weekday: 'short'
    });
    
    return `
        <div class="party-card" data-party-id="${party.partyId}">
            <div class="party-header">
                <div class="party-type">
                    <span class="party-emoji">${typeEmojis[party.type] || '🎮'}</span>
                    <span class="party-type-name">${party.type}</span>
                </div>
                <span class="party-status status-${statusColors[party.status]}">
                    ${statusTexts[party.status]}
                </span>
            </div>
            
            <div class="party-body">
                <h3 class="party-title">${escapeHtml(party.title)}</h3>
                ${party.description ? `<p class="party-description">${escapeHtml(party.description)}</p>` : ''}
                
                <div class="party-info">
                    <div class="info-item">
                        <i class="fas fa-user"></i>
                        <span>${escapeHtml(party.hostName)}</span>
                    </div>
                    <div class="info-item">
                        <i class="fas fa-calendar"></i>
                        <span>${formattedDate} ${party.scheduledTime}</span>
                    </div>
                </div>
                
                <div class="party-teams">
                    <div class="team-info">
                        <span class="team-label">1팀</span>
                        <span class="team-count">${party.team1.length}/${party.maxTeamSize}</span>
                    </div>
                    <div class="team-info">
                        <span class="team-label">2팀</span>
                        <span class="team-count">${party.team2.length}/${party.maxTeamSize}</span>
                    </div>
                    ${party.waitlist.length > 0 ? `
                        <div class="team-info">
                            <span class="team-label">대기</span>
                            <span class="team-count">${party.waitlist.length}</span>
                        </div>
                    ` : ''}
                </div>
            </div>
            
            <div class="party-footer">
                <button class="btn btn-outline" onclick="viewPartyDetail('${party.partyId}')">
                    <i class="fas fa-eye"></i>
                    상세보기
                </button>
                ${party.status === 'recruiting' ? `
                    <a href="/party/${party.partyId}" class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        참여하기
                    </a>
                ` : ''}
            </div>
        </div>
    `;
}

// 필터 탭 설정
function setupFilterTabs() {
    const tabs = document.querySelectorAll('.filter-tab');
    
    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            // 기존 활성 탭 제거
            tabs.forEach(t => t.classList.remove('active'));
            
            // 새 탭 활성화
            this.classList.add('active');
            
            // 필터 변경 및 목록 새로고침
            window.partyData.currentFilter = this.dataset.status;
            loadParties();
        });
    });
}

// 파티 새로고침
async function refreshParties() {
    await Promise.all([
        loadPartyStats(),
        loadParties()
    ]);
    window.toast.success('파티 목록이 새로고침되었습니다.');
}

// 파티 상세보기
async function viewPartyDetail(partyId) {
    try {
        const response = await fetch(`/party/api/${partyId}`);
        if (!response.ok) throw new Error('파티 정보를 불러올 수 없습니다.');
        
        const party = await response.json();
        showPartyDetailModal(party);
        
    } catch (error) {
        console.error('파티 상세 정보 로드 오류:', error);
        window.toast.error('파티 정보를 불러오는 중 오류가 발생했습니다.');
    }
}

// 파티 상세 모달 표시
function showPartyDetailModal(party) {
    const modal = document.getElementById('partyDetailModal');
    const content = document.getElementById('partyDetailContent');
    
    // 모달 내용 생성 (상세 정보 표시)
    content.innerHTML = createPartyDetailContent(party);
    
    // 모달 표시
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
}

// 파티 상세 모달 닫기
function closePartyModal() {
    const modal = document.getElementById('partyDetailModal');
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
}

// 파티 상세 내용 생성
function createPartyDetailContent(party) {
    // 파티 상세 정보 HTML 생성
    const typeEmojis = {
        '정규전': '⚔️',
        '모의전': '🛡️',
        '훈련': '🎯',
        'PVP': '🏆',
        '검은발톱': '🦅',
        '레이드': '🏜️'
    };
    
    return `
        <div class="party-detail">
            <div class="party-detail-header">
                <h2>${typeEmojis[party.type]} ${escapeHtml(party.title)}</h2>
                <p class="party-type-badge">${party.type}</p>
            </div>
            
            ${party.description ? `
                <div class="party-detail-section">
                    <h3>📝 설명</h3>
                    <p>${escapeHtml(party.description)}</p>
                </div>
            ` : ''}
            
            <div class="party-detail-section">
                <h3>📅 일정</h3>
                <p>${new Date(party.scheduledDate).toLocaleDateString('ko-KR')} ${party.scheduledTime}</p>
            </div>
            
            <div class="party-detail-section">
                <h3>👥 팀 구성</h3>
                <div class="team-composition">
                    <div class="team-box">
                        <h4>🔵 1팀 (${party.team1.length}/${party.maxTeamSize})</h4>
                        <ul class="participant-list">
                            ${party.team1.map(p => `<li>${escapeHtml(p.username)}</li>`).join('')}
                        </ul>
                    </div>
                    <div class="team-box">
                        <h4>🔴 2팀 (${party.team2.length}/${party.maxTeamSize})</h4>
                        <ul class="participant-list">
                            ${party.team2.map(p => `<li>${escapeHtml(p.username)}</li>`).join('')}
                        </ul>
                    </div>
                    ${party.waitlist.length > 0 ? `
                        <div class="team-box">
                            <h4>⏳ 대기자 (${party.waitlist.length})</h4>
                            <ul class="participant-list">
                                ${party.waitlist.map(p => `<li>${escapeHtml(p.username)}</li>`).join('')}
                            </ul>
                        </div>
                    ` : ''}
                </div>
            </div>
            
            ${party.preparations ? `
                <div class="party-detail-section">
                    <h3>📌 준비물</h3>
                    <p>${escapeHtml(party.preparations)}</p>
                </div>
            ` : ''}
            
            <div class="party-detail-actions">
                <button class="btn btn-secondary" onclick="closePartyModal()">닫기</button>
                ${party.status === 'recruiting' ? `
                    <a href="/party/${party.partyId}" class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        참여하기
                    </a>
                ` : ''}
            </div>
        </div>
    `;
}

// HTML 이스케이프 함수
function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// 모달 외부 클릭 시 닫기
window.addEventListener('click', function(event) {
    const modal = document.getElementById('partyDetailModal');
    if (event.target === modal) {
        closePartyModal();
    }
});
</script>

<style>
/* 파티 페이지 스타일 */
.content-wrapper {
    padding: 24px;
    max-width: 1200px;
    margin: 0 auto;
}

.page-header {
    margin-bottom: 32px;
    text-align: center;
}

.page-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 8px;
    background: linear-gradient(135deg, var(--accent-primary) 0%, #7289DA 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.page-subtitle {
    color: var(--text-secondary);
    font-size: 1.1rem;
}

/* 필터 바 */
.filter-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
    padding: 16px;
    background: var(--bg-secondary);
    border-radius: 12px;
    border: 1px solid var(--border-color);
}

.filter-tabs {
    display: flex;
    gap: 8px;
}

.filter-tab {
    padding: 8px 16px;
    border: none;
    background: transparent;
    color: var(--text-secondary);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    gap: 8px;
}

.filter-tab:hover {
    background: var(--bg-tertiary);
    color: var(--text-primary);
}

.filter-tab.active {
    background: var(--accent-primary);
    color: white;
}

.filter-actions {
    display: flex;
    gap: 12px;
}

/* 파티 통계 */
.party-stats-section {
    margin-bottom: 32px;
}

.party-stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 16px;
}

.stat-card {
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 20px;
    display: flex;
    align-items: center;
    gap: 16px;
    transition: all 0.3s;
}

.stat-card:hover {
    border-color: var(--accent-primary);
    transform: translateY(-2px);
}

.stat-icon {
    width: 48px;
    height: 48px;
    background: var(--accent-primary);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 20px;
}

.stat-content {
    flex: 1;
}

.stat-value {
    font-size: 24px;
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: 4px;
}

.stat-label {
    font-size: 14px;
    color: var(--text-secondary);
}

/* 로딩 */
.loading {
    display: none;
    text-align: center;
    padding: 60px 20px;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid var(--border-color);
    border-top: 4px solid var(--accent-primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 16px;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* 파티 그리드 */
.party-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 24px;
}

/* 파티 카드 */
.party-card {
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    overflow: hidden;
    transition: all 0.3s;
}

.party-card:hover {
    border-color: var(--accent-primary);
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
}

.party-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px 20px;
    background: var(--bg-tertiary);
    border-bottom: 1px solid var(--border-color);
}

.party-type {
    display: flex;
    align-items: center;
    gap: 8px;
}

.party-emoji {
    font-size: 20px;
}

.party-type-name {
    font-weight: 600;
    color: var(--text-primary);
}

.party-status {
    padding: 4px 12px;
    border-radius: 16px;
    font-size: 12px;
    font-weight: 500;
}

.status-success {
    background: rgba(59, 165, 92, 0.2);
    color: var(--success);
}

.status-warning {
    background: rgba(250, 166, 26, 0.2);
    color: var(--warning);
}

.status-secondary {
    background: rgba(116, 127, 141, 0.2);
    color: var(--text-secondary);
}

.status-danger {
    background: rgba(237, 66, 69, 0.2);
    color: var(--danger);
}

.party-body {
    padding: 20px;
}

.party-title {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 8px;
    color: var(--text-primary);
}

.party-description {
    color: var(--text-secondary);
    font-size: 14px;
    margin-bottom: 16px;
    line-height: 1.5;
}

.party-info {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin-bottom: 16px;
}

.info-item {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    color: var(--text-secondary);
}

.info-item i {
    color: var(--accent-primary);
    width: 16px;
}

.party-teams {
    display: flex;
    gap: 12px;
    margin-bottom: 16px;
}

.team-info {
    flex: 1;
    background: var(--bg-tertiary);
    border-radius: 8px;
    padding: 12px;
    text-align: center;
}

.team-label {
    display: block;
    font-size: 12px;
    color: var(--text-secondary);
    margin-bottom: 4px;
}

.team-count {
    font-weight: 600;
    color: var(--text-primary);
}

.party-footer {
    display: flex;
    gap: 12px;
    padding: 16px 20px;
    background: var(--bg-tertiary);
    border-top: 1px solid var(--border-color);
}

.party-footer .btn {
    flex: 1;
}

/* 빈 상태 */
.empty-state {
    text-align: center;
    padding: 80px 20px;
}

.empty-icon {
    font-size: 64px;
    color: var(--text-muted);
    margin-bottom: 24px;
}

.empty-title {
    font-size: 24px;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 12px;
}

.empty-desc {
    color: var(--text-secondary);
    margin-bottom: 32px;
    line-height: 1.5;
}

/* 모달 */
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
}

.modal-content {
    background-color: var(--bg-primary);
    margin: 5% auto;
    padding: 0;
    border-radius: 12px;
    border: 1px solid var(--border-color);
    width: 90%;
    max-width: 600px;
    max-height: 80vh;
    overflow-y: auto;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid var(--border-color);
}

.modal-title {
    margin: 0;
    color: var(--text-primary);
}

.modal-close {
    background: none;
    border: none;
    font-size: 24px;
    color: var(--text-secondary);
    cursor: pointer;
    padding: 0;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal-close:hover {
    color: var(--text-primary);
}

.modal-body {
    padding: 20px;
}

/* 파티 상세 */
.party-detail-header h2 {
    margin: 0 0 8px 0;
    color: var(--text-primary);
}

.party-type-badge {
    display: inline-block;
    padding: 4px 12px;
    background: var(--accent-primary);
    color: white;
    border-radius: 16px;
    font-size: 12px;
    font-weight: 500;
}

.party-detail-section {
    margin: 20px 0;
}

.party-detail-section h3 {
    margin: 0 0 12px 0;
    color: var(--text-primary);
    font-size: 16px;
}

.team-composition {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.team-box {
    background: var(--bg-secondary);
    border-radius: 8px;
    padding: 16px;
}

.team-box h4 {
    margin: 0 0 8px 0;
    color: var(--text-primary);
}

.participant-list {
    list-style: none;
    padding: 0;
    margin: 0;
}

.participant-list li {
    padding: 4px 0;
    color: var(--text-secondary);
}

.party-detail-actions {
    display: flex;
    gap: 12px;
    margin-top: 24px;
    padding-top: 20px;
    border-top: 1px solid var(--border-color);
}

.party-detail-actions .btn {
    flex: 1;
}

/* 반응형 */
@media (max-width: 768px) {
    .filter-bar {
        flex-direction: column;
        gap: 16px;
    }
    
    .filter-tabs {
        width: 100%;
        justify-content: center;
    }
    
    .party-grid {
        grid-template-columns: 1fr;
    }
    
    .party-teams {
        flex-wrap: wrap;
    }
    
    .team-composition {
        gap: 12px;
    }
    
    .party-detail-actions {
        flex-direction: column;
    }
}
</style>