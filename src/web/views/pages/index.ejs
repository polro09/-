<%- contentFor('body') %>
<div class="content-wrapper">
    <!-- Hero Section -->
    <section class="hero-section">
        <div class="hero-content">
            <h1 class="hero-title">
                <span class="gradient-text">Aimdot.dev</span>
            </h1>
            <p class="hero-description">
                디스코드 서버를 위한 강력하고 직관적인 봇
            </p>
            <div class="hero-buttons">
                <% if (user) { %>
                    <a href="/dashboard" class="btn btn-primary">
                        <i class="fas fa-th-large"></i>
                        대시보드
                    </a>
                    <a href="https://discord.com/oauth2/authorize?client_id=YOUR_BOT_ID&permissions=8&scope=bot%20applications.commands" 
                       class="btn btn-secondary" 
                       target="_blank">
                        <i class="fas fa-plus"></i>
                        봇 초대하기
                    </a>
                <% } else { %>
                    <a href="/auth/discord" class="btn btn-primary">
                        <i class="fab fa-discord"></i>
                        Discord로 로그인
                    </a>
                    <a href="https://discord.com/oauth2/authorize?client_id=YOUR_BOT_ID&permissions=8&scope=bot%20applications.commands" 
                       class="btn btn-secondary" 
                       target="_blank">
                        <i class="fas fa-plus"></i>
                        봇 초대하기
                    </a>
                <% } %>
            </div>
        </div>
        <div class="hero-image">
            <img src="https://i.imgur.com/Sd8qK9c.gif" alt="Aimdot.dev">
        </div>
    </section>

    <!-- Stats Section -->
    <section class="stats-section">
        <div class="stats-container">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-server"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number" data-count="<%= locals.serverCount || '0' %>">0</h3>
                    <p class="stat-label">서버</p>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-users"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number" data-count="<%= locals.userCount || '0' %>">0</h3>
                    <p class="stat-label">사용자</p>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-terminal"></i>
                </div>
                <div class="stat-content">
                    <h3 class="stat-number" data-count="<%= locals.commandCount || '0' %>">0</h3>
                    <p class="stat-label">명령어</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features-section">
        <h2 class="section-title">주요 기능</h2>
        <div class="features-grid">
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-gamepad"></i>
                </div>
                <h3>게임 통합</h3>
                <p>발로란트 전적 조회, 팀 매칭, 스크림 관리 등 다양한 게임 기능을 제공합니다.</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-users-cog"></i>
                </div>
                <h3>파티 시스템</h3>
                <p>게임 파티 모집, 자동 매칭, 역할 분배 등 팀 구성을 쉽게 관리할 수 있습니다.</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-shield-alt"></i>
                </div>
                <h3>강력한 관리</h3>
                <p>서버 관리, 권한 설정, 로그 추적 등 안전한 커뮤니티 운영을 지원합니다.</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-chart-line"></i>
                </div>
                <h3>통계 & 분석</h3>
                <p>서버 활동, 사용자 통계, 명령어 사용 현황을 실시간으로 확인할 수 있습니다.</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-cogs"></i>
                </div>
                <h3>커스터마이징</h3>
                <p>서버별 설정, 사용자 정의 명령어, 자동화 기능으로 원하는 대로 구성하세요.</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">
                    <i class="fas fa-bolt"></i>
                </div>
                <h3>빠른 응답</h3>
                <p>최적화된 성능과 안정적인 서버로 언제나 빠른 응답을 보장합니다.</p>
            </div>
        </div>
    </section>
</div>

<!-- 토스트 컨테이너 -->
<div class="toast" id="toast">
    <i class="toast-icon fas fa-info-circle"></i>
    <span class="toast-message" id="toast-message"></span>
</div>

<!-- 페이지별 스타일 -->
<style>
/* Hero Section */
.hero-section {
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-height: 60vh;
    padding: 4rem 0;
    gap: 3rem;
}

.hero-content {
    flex: 1;
}

.hero-title {
    font-size: 4rem;
    font-weight: 700;
    margin-bottom: 1rem;
    line-height: 1.2;
}

.gradient-text {
    background: linear-gradient(135deg, var(--accent-primary) 0%, #7289da 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.hero-description {
    font-size: 1.5rem;
    color: var(--text-secondary);
    margin-bottom: 2rem;
    line-height: 1.5;
}

.hero-buttons {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.hero-image {
    flex: 0 0 300px;
}

.hero-image img {
    width: 100%;
    height: auto;
    border-radius: 20px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
}

/* Stats Section */
.stats-section {
    padding: 4rem 0;
    background: var(--bg-secondary);
    border-radius: 20px;
    margin: 2rem 0;
}

.stats-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
}

.stat-card {
    text-align: center;
    padding: 2rem;
    background: var(--bg-primary);
    border-radius: 12px;
    transition: transform 0.3s ease;
}

.stat-card:hover {
    transform: translateY(-5px);
}

.stat-icon {
    font-size: 2.5rem;
    color: var(--accent-primary);
    margin-bottom: 1rem;
}

.stat-number {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-primary);
    margin: 0;
}

.stat-label {
    color: var(--text-secondary);
    font-size: 1rem;
    margin: 0;
}

/* Features Section */
.features-section {
    padding: 4rem 0;
}

.section-title {
    font-size: 2.5rem;
    text-align: center;
    margin-bottom: 3rem;
    font-weight: 700;
}

.features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
}

.feature-card {
    background: var(--bg-secondary);
    border-radius: 12px;
    padding: 2rem;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.feature-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

.feature-icon {
    font-size: 3rem;
    color: var(--accent-primary);
    margin-bottom: 1rem;
}

.feature-card h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--text-primary);
}

.feature-card p {
    color: var(--text-secondary);
    line-height: 1.6;
}

/* Toast 스타일 */
.toast {
    position: fixed;
    top: 20px;
    right: 20px;
    background: #1e1e1e;
    color: #ffffff;
    padding: 16px 24px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    gap: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
    transform: translateX(400px);
    transition: transform 0.3s ease;
    z-index: 10000;
}

.toast.show {
    transform: translateX(0);
}

.toast.success {
    border-left: 4px solid #4caf50;
}

.toast.error {
    border-left: 4px solid #f44336;
}

.toast.info {
    border-left: 4px solid #2196f3;
}

.toast.warning {
    border-left: 4px solid #ff9800;
}

.toast-icon {
    font-size: 20px;
}

.toast.success .toast-icon { color: #4caf50; }
.toast.error .toast-icon { color: #f44336; }
.toast.info .toast-icon { color: #2196f3; }
.toast.warning .toast-icon { color: #ff9800; }

/* Responsive */
@media (max-width: 768px) {
    .hero-section {
        flex-direction: column;
        text-align: center;
    }
    
    .hero-title {
        font-size: 3rem;
    }
    
    .hero-buttons {
        justify-content: center;
    }
    
    .features-grid {
        grid-template-columns: 1fr;
    }
    
    .stats-container {
        grid-template-columns: repeat(2, 1fr);
    }
}
</style>

<!-- 페이지별 스크립트 -->
<script>
// 숫자 카운트 애니메이션
document.addEventListener('DOMContentLoaded', function() {
    const animateNumbers = () => {
        const numbers = document.querySelectorAll('.stat-number');
        
        numbers.forEach(num => {
            const target = parseInt(num.getAttribute('data-count'));
            const duration = 2000;
            const increment = target / (duration / 16);
            let current = 0;
            
            const updateNumber = () => {
                current += increment;
                if (current < target) {
                    num.textContent = Math.floor(current).toLocaleString();
                    requestAnimationFrame(updateNumber);
                } else {
                    num.textContent = target.toLocaleString();
                }
            };
            
            updateNumber();
        });
    };
    
    // Intersection Observer로 스크롤 시 애니메이션
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                animateNumbers();
                observer.disconnect();
            }
        });
    });
    
    const statsSection = document.querySelector('.stats-section');
    if (statsSection) {
        observer.observe(statsSection);
    }
});

// 토스트 메시지 함수
function showToast(message, type = 'info') {
    const toast = document.getElementById('toast');
    const toastMessage = document.getElementById('toast-message');
    const toastIcon = toast.querySelector('.toast-icon');
    
    toast.className = `toast ${type}`;
    toastMessage.textContent = message;
    
    // 아이콘 변경
    const icons = {
        success: 'fa-check-circle',
        error: 'fa-exclamation-circle',
        warning: 'fa-exclamation-triangle',
        info: 'fa-info-circle'
    };
    
    toastIcon.className = `toast-icon fas ${icons[type] || icons.info}`;
    
    toast.classList.add('show');
    
    setTimeout(() => {
        toast.classList.remove('show');
    }, 3000);
}

// 봇 초대 URL (실제 봇 ID로 교체 필요)
document.querySelectorAll('a[href*="YOUR_BOT_ID"]').forEach(link => {
    link.addEventListener('click', (e) => {
        if (link.href.includes('YOUR_BOT_ID')) {
            e.preventDefault();
            showToast('봇 ID를 설정해주세요.', 'warning');
        }
    });
});
</script>

<!-- 페이지별 추가 스크립트 -->
<script>
// checkUserSession 함수가 정의되지 않은 경우를 위한 안전장치
if (typeof checkUserSession === 'undefined') {
    window.checkUserSession = function() {
        console.log('checkUserSession 호출됨 - 아무 작업도 하지 않음');
    };
}
</script>